
@page "/Personas"
@page "/Personas/{PersonaId:int}"


@using Registro_De_Prestamos.Models;
@using Registro_De_Prestamos.BLL;
@using Blazored.Toast;
@using Blazored.Toast.Services;

@inject IToastService toast

<EditForm Model="personas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1>Registro de Personas</h1>
        </div>
        <div class="card-body">
            <form />
            <div class="form-row align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>PersonaId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="personas.PersonaId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button"  class="btn btn-primary" @onclick="Buscar">
                                    <span class="oi oi-magnifying-glass"></span> Buscar 
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <label>Nombres</label>
                <InputText @bind-Value="personas.Nombre" class="form-control" />
                <ValidationMessage For="@(() => personas.Nombre)" />
            </div>


            <div class="form-group">
                <label>Telefono</label>
                <InputText @bind-Value="personas.Telefono" class="form-control" />
                <ValidationMessage For="@(() => personas.Telefono)" />
            </div>


            <div class="form-group">
                <label>Cedula</label>
                <InputText @bind-Value="personas.Cedula" class="form-control" />
                <ValidationMessage For="@(() => personas.Cedula)" />
            </div>


            <div class="form-group">
                <label>Dirección</label>
                <InputText @bind-Value="personas.Direccion" class="form-control" />
                <ValidationMessage For="@(() => personas.Direccion)" />
            </div>


            <div class="form-group">
                <label>Fecha de de Nacimiento </label>
                <InputDate @bind-Value="personas.FechaCumple" class="form-control" />
                <ValidationMessage For="@(() => personas.FechaCumple)" />
            </div>

            <div class="form-group">
                <label>Balance</label>
                <InputNumber @bind-Value="personas.Balance" class="form-control " readonly="true" />
                <ValidationMessage For="@(() => personas.Balance)" />
            </div>
        </div>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button"  class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <span class="oi oi-file mr-2"></span> Nuevo
                </button>
                <button type="submit" class="btn btn-lg btn-success">
                    <span class="oi oi-account-login" style="transform:rotate(90deg)"></span> Guardar
                </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <span class="oi oi-trash mr-2"></span>   Eliminar
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    [Parameter]
    public int PersonaId { get; set; }

    private Personas personas = new Personas();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    }

    public void Nuevo()
    {
        personas = new Personas();
    }


    private void Buscar()
    {
        if (personas.PersonaId > 0)
        {
            var encontrado = PersonaBLL.Buscar(personas.PersonaId);

            if (encontrado != null)
                this.personas = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }

    public void Guardar()
    {
        bool guardo;

        guardo = PersonaBLL.Guardar(personas);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
            toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PersonaBLL.Eliminar(personas.PersonaId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }
}